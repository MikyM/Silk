@namespace Silk.Dashboard.Components

@inherits DashboardComponentBase

@using BlazorComponentUtilities
@using Remora.Discord.API
@using Remora.Discord.API.Abstractions.Objects

<MudCard Class="@ComponentClasses"
         Style="@ComponentStyles"
         @onclick="HandleOnClickAsync">
    <MudCardContent Class="d-flex flex-column align-center p-2">
        <MudText Typo="Typo.h5"
                 Align="Align.Center"
                 GutterBottom="true">
            @Guild.Name.Value
        </MudText>

        <MudImage ObjectFit="ObjectFit.Contain"
                  Width="165"
                  Src="@GuildIconUrl"
                  Alt="@Guild.Name.Value"
                  Elevation="1"
                  Class="rounded"/>
    </MudCardContent>
</MudCard>

@code {

    [Parameter]
    public IPartialGuild Guild { get; set; }

    [Parameter]
    public EventCallback<IPartialGuild> OnClick { get; set; }

    private const string DefaultGuildIconUrl = "https://img.icons8.com/ios-filled/100/000000/no-image.png";

    protected override string ComponentStyles
        => GuildViewStyleBuilder.Build();

    private StyleBuilder GuildViewStyleBuilder
        => new StyleBuilder()
            .AddStyle("cursor", "pointer")
            .AddStyle("max-width", "220px")
            .AddStyle(base.ComponentStyles);

    private bool HasIcon => Guild.Icon.IsDefined(out var icon) &&
                            !string.IsNullOrEmpty(icon.Value);

    private string GuildIconUrl => HasIcon ? GetGuildIconUrl(Guild) : DefaultGuildIconUrl;

    public static string GetGuildIconUrl(IPartialGuild guild)
    {
        if (!guild.Icon.IsDefined(out var icon))
            return DefaultGuildIconUrl;

        var guildIconUrl = "";
        var result = CDN.GetGuildIconUrl(guild.ID.Value, icon, imageSize: 256);

        if (result.IsDefined(out var uri))
            guildIconUrl = uri.ToString();

        return guildIconUrl;
    }

    private async Task HandleOnClickAsync() => await OnClick.InvokeAsync(Guild);
}